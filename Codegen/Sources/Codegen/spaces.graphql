fragment spacesMetadata on SpaceData {
    name
    description
    owner {
        displayName
        pictureURL
    }
    generators {
        id
        params
    }
    comments {
        id
        profile {
        displayName
        pictureURL
        }
    createdTs
        comment
    }
    entities {
        metadata {
        docID
        }
        spaceEntity {
        url
        title
        snippet
        thumbnail
        isPinned
        generator {
            id
        }
        content {
            id
            title
            snippet
            __typename
            typeSpecific {
            __typename
            ... on TechDoc {
                techDoc {
                name
                sections {
                    body
                }
                }
            }
            ... on NewsItem {
                newsItem {
                title
                snippet
                url
                thumbnailImage {
                    url
                }
                providerName
                datePublished
                favIconURL
                preference
                domain
                }
            }
            ... on Web {
                web {
                retailerProduct {
                    url
                    name
                    description
                    priceHistory {
                    currentPrice
                    }
                    reviews {
                    ratingSummary {
                        numReviews
                        rating {
                        productStars
                        }
                    }
                    }
                }
                recipes {
                    title
                    imageURL
                    source
                    totalTime
                    recipeRating {
                    recipeStars
                    numReviews
                    }
                }
                }
            }
            ... on RichEntity {
                richEntity {
                images {
                    thumbnailURL
                }
                title
                subTitle
                }
            }
            }
            actionURL
        }
        }
    }
}

query ListSpaces($kind: ListSpacesKind = All) {
  listSpaces(input: {kind: $kind}) {
    requestID
    space {
      pageMetadata {
        pageID
      }
      space {
        name
        lastModifiedTs
        owner {
            displayName
            pictureURL
        }
        notifications(input: {kind: HomeFeed}) {
          type
          timestamp
          data {
            __typename
            ... on NotificationSpaceSharedWithYou {
              sharedBy {
                displayName
                email
                pictureURL
              }
            }
            ... on NotificationSpaceEntitiesAdded {
              addedBy {
                displayName
                email
                pictureURL
              }
              itemID
            }
            ... on NotificationSpaceCommentsAdded {
              addedBy {
                displayName
                email
                pictureURL
              }
            }
          }
        }
        userACL {
          acl
        }
        acl {
          userID
          profile {
            displayName
            email
            pictureURL
          }
          acl
        }
        hasPublicACL
        thumbnail
        thumbnailSize {
          height
          width
        }
        resultCount
        isDefaultSpace
        isPinned
      }
    }
  }
}

query GetSpacesTitleInfo($ids: [String!]) {
  getSpace(input: { ids: $ids }) {
    space {
      pageMetadata {
        pageID
      }
      space {
        name
        thumbnail
      }
    }
  }
}

query GetRelatedSpaces($spaceID: String!) {
  getRelatedSpaces(input: { spaceID: $spaceID }) {
    sharedAuthor {
      space {
        stats {
          followers
          views
        }
        pageMetadata {
          pageID
        }
        space {
          ...spacesMetadata
        }
      }
    }
  }
}

query GetRelatedSpacesCount($spaceID: String!) {
  getRelatedSpaces(input: { spaceID: $spaceID }) {
    sharedAuthor {
      space {
        pageMetadata {
          pageID
        }
      }
    }
  }
}

query GetSpacesData($ids: [String!]) {
  getSpace(input: { ids: $ids }) {
    space {
      stats {
        followers
        views
      }
      pageMetadata {
        pageID
      }
      space {
        ...spacesMetadata
      }
    }
  }
}

mutation AddToSpace($input: AddSpaceResultByURLInput!) {
  entityId: addSpaceResultByURL(input: $input)
}

mutation CreateSpace($name: String!) {
  createSpace(input: { name: $name })
}

mutation UpdateSpace($input: UpdateSpaceInput!) {
  updateSpace(input: $input)
}

mutation LeaveSpace($input: LeaveSpaceInput!) {
  leaveSpace(input: $input)
}

mutation DeleteSpace($input: DeleteSpaceInput!) {
  deleteSpace(input: $input)
}

mutation DeleteSpaceResultByURL($input: DeleteSpaceResultByURLInput!) {
  deleteSpaceResultByURL(input: $input)
}

mutation BatchDeleteSpaceResult($input: BatchDeleteSpaceResultInput!) {
  batchDeleteSpaceResult(input: $input)
}

mutation UpdateSpaceEntityDisplayData($input: UpdateSpaceEntityDisplayDataInput!) {
   updateSpaceEntityDisplayData(input: $input)
}

mutation SetSpaceDetailPageSortOrder($input: SetSpaceDetailPageSortOrderInput!) {
  setSpaceDetailPageSortOrder(input: $input)
}

mutation AddSpacePublicACL($input: AddSpacePublicACLInput!) {
  addSpacePublicACL(input: $input)
}

mutation DeleteSpacePublicACL($input: DeleteSpacePublicACLInput!) {
  deleteSpacePublicACL(input: $input)
}

mutation DeleteSpaceGenerator($input: DeleteSpaceGeneratorInput!) {
  deleteSpaceGenerator(input: $input) {
    applied
  }
}

mutation AddSpaceComment($input: AddSpaceCommentInput!) {
    addSpaceComment(input: $input)
}

mutation AddSpaceSoloACLs($input: AddSpaceSoloACLsInput!) {
  addSpaceSoloACLs(input: $input) {
        nonNeevanEmails
        changedACLCount
    }
}

mutation ClaimGeneratedItem($input: ClaimGeneratedItemInput!) {
  claimGeneratedItem(input: $input) {
        applied
    }
}

mutation PinSpace($input: PinSpaceInput!) {
    pinSpace(input: $input)
}

mutation PinSpaceItem($input: PinSpaceItemInput!) {
    pinSpaceItem(input: $input)
}
